<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Game Launcher</title>
	<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
	<style>
		body {
			font-family: 'Poppins', sans-serif;
			margin: 0;
			background-color: #121212;
			color: #fff;
			height: 100vh;
			display: flex;
		}

		.launcher-container {
			display: flex;
			width: 100%;
			height: 100%;
			background: #1e1e1e;
		}

		.sidebar-menu {
			width: 80px;
			background-color: #121212;
			display: flex;
			flex-direction: column;
			align-items: center;
			padding-top: 20px;
			overflow-y: auto;
			border-right: 1px solid rgba(255, 255, 255, 0.1);
		}

		.sidebar-menu img {
			width: 50px;
			height: 50px;
			margin: 10px 0;
			border-radius: 15px;
			cursor: pointer;
			transition: transform 0.3s ease, box-shadow 0.3s ease;
		}

		.sidebar-menu img.active {
			transform: scale(1.1);
			box-shadow: 0 4px 10px rgba(255, 87, 34, 0.8);
		}

		.sidebar-menu img:hover {
			transform: scale(1.1);
			box-shadow: 0 4px 8px rgba(255, 255, 255, 0.2);
		}

		.game-content {
			flex: 1;
			display: flex;
			flex-direction: column;
			position: relative;
			background: url('https://via.placeholder.com/1920x1080') center/cover no-repeat;
			color: #fff;
			transition: opacity 0.4s ease;
			opacity: 1;
		}

		.hero-overlay {
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			background: linear-gradient(to top, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.3));
			z-index: 1;
		}

		.hero-content {
			position: relative;
			z-index: 2;
			display: flex;
			flex-direction: column;
			justify-content: flex-start;
			padding: 40px;
			max-width: 600px;
		}

		.hero-content img {
			width: 300px;
			height: auto;
			margin-bottom: 20px;
			transition: opacity 0.8s ease;
		}

		.hero-content p {
			font-size: 1.2rem;
			margin-bottom: 20px;
			color: #fff;
			text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);
			transition: opacity 0.8s ease;
		}

		.hero-content .button-group {
			display: flex;
			gap: 10px;
			margin-bottom: 20px;
		}

		.hero-content .button-group button {
			display: flex;
			align-items: center;
			justify-content: center;
			gap: 10px;
			color: #fff;
			padding: 12px 30px;
			border: none;
			border-radius: 50px;
			font-size: 1rem;
			cursor: pointer;
			transition: background 0.3s ease, transform 0.2s ease;
		}

		.hero-content .button-group button i {
			font-size: 1.2rem;
		}

		.hero-content .button-group button:hover {
			transform: scale(1.05);
		}

		.footer {
			margin-top: auto;
			padding: 20px 40px;
			z-index: 3;
		}

		.platforms-container {
			margin-bottom: 20px;
		}

		.platforms-label {
			font-size: 1.2rem;
			margin-bottom: 20px;
			color: #fff;
			text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);
			transition: opacity 0.8s ease;
		}

		.platforms {
			margin: 10px 0;
			display: flex;
			gap: 10px;
		}

		.platform-icon {
			display: flex;
			align-items: center;
			justify-content: center;
			width: 40px;
			height: 40px;
			border: 1px solid rgba(255, 255, 255, 0.3);
			border-radius: 50%;
			background-color: rgba(255, 255, 255, 0.1);
			color: #fff;
			font-size: 1.5rem;
		}

		.video-preview {
			display: grid;
			grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
			gap: 20px;
			margin-top: 20px;
		}

		.video-preview iframe {
			width: 100%;
			aspect-ratio: 16 / 9;
			border: none;
			border-radius: 5px;
			box-shadow: 0 0 10px 1px var(--themeColor), 0 0 20px 1px var(--themeColor);
			transition: box-shadow 0.3s ease-in-out;
		}

		.app-drawer {
			position: fixed;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			background: rgba(0, 0, 0, 0.9);
			color: #fff;
			display: flex;
			flex-direction: column;
			align-items: center;
			justify-content: center;
			opacity: 0;
			visibility: hidden;
			transition: opacity 0.3s ease, visibility 0.3s ease;
			z-index: 10;
		}

		.app-drawer.active {
			opacity: 1;
			visibility: visible;
		}

		.app-drawer .games-grid {
			display: grid;
			grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
			gap: 20px;
			width: 80%;
		}

		.app-drawer .game-card {
			background: rgba(255, 255, 255, 0.1);
			padding: 20px;
			border-radius: 10px;
			text-align: center;
			cursor: pointer;
			transition: transform 0.2s ease, background 0.2s ease;
		}

		.app-drawer .close-button {
			position: absolute;
			top: 20px;
			right: 20px;
			background: rgba(255, 255, 255, 0.2);
			border: none;
			padding: 10px 20px;
			border-radius: 5px;
			cursor: pointer;
		}
	</style>
</head>
<body>
	<div class="launcher-container">
		<div class="sidebar-menu" id="sidebarMenu">
			<button id="appDrawerButton">All Games</button>
		</div>
		<div class="game-content" id="gameContent">
			<div class="hero-overlay"></div>
			<div class="hero-content">
				<img id="gameLogo" src="https://via.placeholder.com/300x150" alt="Game Logo">
				<p id="gameDescription">Game description goes here.</p>
				<div class="button-group">
					<button id="playButton"><i class="material-icons">play_arrow</i> Play</button>
					<button id="registerButton"><i class="material-icons">person_add</i> Register</button>
					<button id="discordButton"><i class="material-icons">chat</i> Discord</button>
				</div>
			</div>
			<div class="footer">
				<div class="platforms-container">
					<div class="platforms-label">Platform Availability</div>
					<div id="platforms" class="platforms"></div>
				</div>
				<div class="video-preview" id="videoPreview"></div>
			</div>
		</div>
	</div>

	<div class="app-drawer" id="appDrawer">
		<button class="close-button" id="closeAppDrawer">Close</button>
		<div class="games-grid" id="gamesGrid"></div>
	</div>

	<script>
		const sidebarMenu = document.getElementById('sidebarMenu');
		const gameLogo = document.getElementById('gameLogo');
		const gameDescription = document.getElementById('gameDescription');
		const playButton = document.getElementById('playButton');
		const registerButton = document.getElementById('registerButton');
		const discordButton = document.getElementById('discordButton');
		const platformsDiv = document.getElementById('platforms');
		const videoPreview = document.getElementById('videoPreview');
		const appDrawer = document.getElementById('appDrawer');
		const appDrawerButton = document.getElementById('appDrawerButton');
		const closeAppDrawer = document.getElementById('closeAppDrawer');
		const gamesGrid = document.getElementById('gamesGrid');

		let games = [];

		async function fetchServers() {
			const response = await fetch('/api/servers');
			const data = await response.json();

			games = data.data.map(server => ({
				url: server.url,
				registerUrl: server.registerUrl,
				discordUrl: server.discordUrl,
				name: server.name,
				description: server.description,
				logo: server.logo,
				icon: server.icon,
				background: server.background,
				themeColor: server.themeColor,
				platforms: server.platforms,
				youtubeVideos: server.youtubeVideos,
			}));

			renderSidebar();
			setGameState(games[0]);
		}

		function renderSidebar() {
			games.forEach((game, index) => {
				const img = document.createElement('img');
				img.src = game.icon;
				img.alt = game.name;
				img.dataset.index = index;

				if (index === 0) img.classList.add('active');

				img.addEventListener('click', handleGameSelection);
				sidebarMenu.appendChild(img);
			});
		}

		function handleGameSelection(event) {
			const index = event.target.dataset.index;
			const selectedGame = games[index];

			document.querySelector('.sidebar-menu img.active')?.classList.remove('active');
			event.target.classList.add('active');

			setGameState(selectedGame);
		}

		function setGameState(game) {
			gameContent.style.opacity = 0;

			setTimeout(() => {
				gameLogo.src = game.logo;
				gameDescription.textContent = game.description;
				gameContent.style.backgroundImage = `url(${game.background})`;

				platformsDiv.innerHTML = '';
				game.platforms.forEach(platform => {
					const platformIcon = document.createElement('div');
					platformIcon.classList.add('platform-icon');
					platformIcon.innerHTML = platform === 'PC' ? '💻' :
						platform === 'Mac' ? '🍎' :
						platform === 'Android' ? '🤖' : platform;
					platformsDiv.appendChild(platformIcon);
				});

				const themeColor = game.themeColor;

				videoPreview.innerHTML = '';
				game.youtubeVideos.forEach(videoId => {
					const iframe = document.createElement('iframe');
					iframe.src = `https://www.youtube.com/embed/${videoId}?modestbranding=1&rel=0&controls=0&iv_load_policy=3&cc_load_policy=0`;
					iframe.allow = 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture';
					iframe.style.setProperty('--themeColor', themeColor);
					iframe.classList.add('glow');
					videoPreview.appendChild(iframe);
				});

				playButton.style.background = themeColor;
				registerButton.style.background = themeColor;
				discordButton.style.background = themeColor;

				playButton.onclick = () => window.location.href = game.url;
				registerButton.onclick = () => window.location.href = game.registerUrl;
				discordButton.onclick = () => window.location.href = game.discordUrl;

				gameContent.style.opacity = 1;
			}, 400);
		}

		function renderGamesGrid() {
			gamesGrid.innerHTML = '';
			games.forEach(game => {
				const gameCard = document.createElement('div');
				gameCard.classList.add('game-card');
				gameCard.innerHTML = `
					<img src="${game.logo}" alt="${game.name}" style="width: 100px; height: 100px; margin-bottom: 10px; border-radius: 10px;">
					<h3>${game.name}</h3>
					<p>${game.description}</p>
				`;
				gamesGrid.appendChild(gameCard);
			});
		}

		appDrawerButton.addEventListener('click', () => {
			appDrawer.classList.add('active');
			renderGamesGrid();
		});

		closeAppDrawer.addEventListener('click', () => {
			appDrawer.classList.remove('active');
		});

		fetchServers();
	</script>
</body>
</html>