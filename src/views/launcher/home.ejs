<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Game Launcher</title>
	<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
	<style>
		body {
			font-family: 'Poppins', sans-serif;
			margin: 0;
			background-color: #121212;
			color: #fff;
			display: flex;
			justify-content: center;
			align-items: center;
			height: 100vh;
			overflow: hidden;
		}

		.launcher-container {
			display: flex;
			width: 100%;
			height: 100%;
			background: #1e1e1e;
			overflow: hidden;
		}

		.sidebar-menu {
			width: 79px;
			display: flex;
			flex-direction: column;
			align-items: center;
			background: #252525;
			z-index: 2;
			overflow-y: auto;
			overflow-x: hidden;
			max-height: 100vh;
			box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
			scroll-behavior: smooth;
		}

		.sidebar-menu::-webkit-scrollbar {
			width: 8px;
		}

		.sidebar-menu::-webkit-scrollbar-thumb {
			background-color: #ff5722;
		}

		.sidebar-menu::-webkit-scrollbar-track {
			background: rgba(0, 0, 0, 0.2);
		}

		.sidebar-menu img {
			width: 50px;
			height: 50px;
			border-radius: 10px;
			cursor: pointer;
			transition: transform 0.3s, border 0.3s;
			margin: 8px 15px;
		}

		.sidebar-menu img.active {
			transform: scale(1.1);
			border-width: 3px;
			border-style: solid;
			filter: brightness(0.8);
		}

		.game-content {
			padding: 40px;
			display: flex;
			flex-direction: column;
			align-items: center;
			justify-content: center;
			text-align: center;
			transition: background-color 0.3s, background-image 0.3s;
			z-index: 0;
			width: 100%;
			height: 100%;

			background-attachment: fixed;
			background-color: #000;
			background-position-x: center;
			background-repeat: no-repeat;
			background-size: cover;
		}

		.game-content img {
			width: 500px;
			margin-bottom: 20px;
		}

		.game-content h1 {
			font-size: 2.5rem;
			margin-bottom: 10px;
		}

		.game-content p {
			font-size: 1rem;
			margin-bottom: 30px;
			color: #bbb;
			width: 50%;
		}

		.game-content button,
		.game-content-list button {
			background: linear-gradient(45deg, #ff5722, #ff9100);
			color: #fff;
			border: none;
			padding: 12px 30px;
			font-size: 1.2rem;
			border-radius: 50px;
			cursor: pointer;
			transition: background 0.3s;
		}

		.game-content button:hover,
		.game-content-list button:hover {
			background: linear-gradient(45deg, #ff9100, #ff5722);
		}

		.sidebar-menu img:hover {
			filter: brightness(0.8);
		}

		.background-overlay {
			content: '';
			width: 100vw;
			height: 100vh;
			position: fixed;
			background-color: rgba(0, 0, 0, 0.5);
			top: 0;
			z-index: -1;
			backdrop-filter: blur(10px);
		}

		.game-card {
			background-color: #333;
			padding: 20px;
			margin: 10px;
			border-radius: 10px;
			color: #fff;
			width: 200px;
			text-align: center;
		}

		.game-card img {
			width: auto;
			height: 60px;
			border-radius: 10px;
		}

		.hidden-element {
			display: none;
		}

		#toggleGamesButton {
			background-color: #252525;
			color: #fff;
			border: none;
			padding: 12px;
			font-size: 1.5rem;
			border-radius: 50%;
			cursor: pointer;
			transition: background 0.3s, transform 0.3s;
			display: flex;
			justify-content: center;
			align-items: center;
		}

		#toggleGamesButton:hover {
			background-color: #ff5722;
			transform: scale(1.1);
		}

		#toggleGamesButton .material-icons {
			font-size: 1.8rem;
		}

	</style>
</head>
<body>
<div class="launcher-container">
	<div class="sidebar-menu">
		<button id="toggleGamesButton">
			<span class="material-icons">menu</span>
		</button>
	</div>
	<div class="game-content">
		<div class="background-overlay"></div>

		<img src="https://example.com/game1-logo.png" alt="Game Logo">
		<h1>Game Title</h1>
		<p>Experience the adventure of a lifetime in this thrilling game.</p>
		<button>Play Now</button>
	</div>
	<div class="game-content-list hidden-element">
		<div class="background-overlay"></div>
	</div>
</div>
<script>
	function makeTransparent(color, percentage) {
		const rgba = color.match(/^#([0-9A-Fa-f]{6})$/);
		if (rgba) {
			const hex = rgba[1];
			const r = parseInt(hex.substring(0, 2), 16);
			const g = parseInt(hex.substring(2, 4), 16);
			const b = parseInt(hex.substring(4, 6), 16);
			return `rgba(${r}, ${g}, ${b}, ${percentage})`;
		}
		return color;
	}

	const sidebarMenu = document.querySelector('.sidebar-menu');
	const gameLogo = document.querySelector('.game-content img');
	const gameBackgroundOverlay = document.querySelector('.game-content .background-overlay');
	const gameTitle = document.querySelector('.game-content h1');
	const gameDescription = document.querySelector('.game-content p');
	const playButton = document.querySelector('.game-content button');
	const gameContent = document.querySelector('.game-content');
	const gameContentList = document.querySelector('.game-content-list');
	const toggleGamesButton = document.getElementById('toggleGamesButton');

	let games = [];

	async function fetchServers() {
		const response = await fetch('/api/servers');

		const data = await response.json();

		games = data.data.map(server => ({
			url: server.url,
			name: server.name,
			description: server.description,
			logo: server.logo,
			logoMini: server.logoMini,
			icon: server.icon,
			background: server.background,
			themeColor: server.themeColor,
		}));

		renderSidebar();
		setGameState(games[0])
	}

	function renderSidebar() {
		const fragment = document.createDocumentFragment();

		games.forEach((game, index) => {
			const img = document.createElement('img');
			img.src = game.icon;
			img.alt = game.name;
			img.dataset.index = index;

			if (index === 0) {
				img.classList.add('active');
				img.style.backgroundColor = game.themeColor;
				img.style.borderColor = game.themeColor;
			}

			img.addEventListener('click', handleGameSelection);
			fragment.appendChild(img);
		});

		sidebarMenu.appendChild(fragment);
	}

	function handleGameSelection(event) {
		const index = event.target.dataset.index;
		const game = games[index];

		document.querySelector('.sidebar-menu img.active').classList.remove('active');

		event.target.classList.add('active');
		event.target.style.backgroundColor = game.themeColor;
		event.target.style.borderColor = game.themeColor;

		setGameState(game)
	}

	function setGameState(game) {
		gameLogo.src = game.logo;
		gameTitle.textContent = game.name;
		gameDescription.textContent = game.description;
		gameContent.style.backgroundImage = `url(${game.background})`;
		gameContent.style.backgroundColor = game.themeColor;
		gameBackgroundOverlay.style.backgroundColor = makeTransparent(game.themeColor, 0.07);
		playButton.style.background = game.themeColor;
	}

	toggleGamesButton.addEventListener('click', () => {
		gameContent.classList.toggle('hidden-element');
		gameContentList.classList.toggle('hidden-element');

		if (!gameContentList.querySelector('.game-card')) {
			renderGameCards();
		}
	});

	function renderGameCards() {
		const gameCards = document.createElement('div');
		gameCards.style.display = 'flex';
		gameCards.style.flexWrap = 'wrap';
		gameCards.style.justifyContent = 'center';

		games.forEach(game => {
			const card = document.createElement('div');
			card.classList.add('game-card');
			card.innerHTML = `
		        <img src="${game.logoMini}" alt="${game.name}">
		        <h3>${game.name}</h3>
				<button style="background:${game.themeColor}">Play Now</button>
		    `;
			gameCards.appendChild(card);
		});

		gameContentList.appendChild(gameCards);
	}

	fetchServers();
</script>

</body>
</html>
